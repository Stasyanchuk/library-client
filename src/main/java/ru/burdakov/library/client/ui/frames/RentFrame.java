/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.burdakov.library.client.ui.frames;

import ru.burdakov.library.client.api.entity.BookEntity;
import ru.burdakov.library.client.api.entity.ClientEntity;
import ru.burdakov.library.client.api.entity.RentEntity;
import ru.burdakov.library.client.api.service.RequestService;
import ru.burdakov.library.client.ui.model.BookComboBoxModel;
import ru.burdakov.library.client.ui.model.ClientComboBoxModel;
import ru.burdakov.library.client.ui.panel.BookPanel;
import ru.burdakov.library.client.ui.panel.RentPanel;

import javax.swing.*;
import java.awt.*;

/**
 *
 * @author klavi
 */
public class RentFrame extends javax.swing.JFrame {

    private RentPanel rentPanel;
    private BookPanel bookPanel;
    private ClientComboBoxModel clientComboBoxModel;
    private BookComboBoxModel bookComboBoxModel;

    /**
     * Creates new form RentFrame
     */
    public RentFrame(RentPanel rentPanel, BookPanel bookPanel) {
        this.rentPanel = rentPanel;
        this.bookPanel = bookPanel;
        clientComboBoxModel = new ClientComboBoxModel(RequestService.getArrayClient());
        bookComboBoxModel = new BookComboBoxModel(RequestService.getArrayBooks());
        initComponents();
        setLocationRelativeTo(null);
        initModels();
    }

    private void initModels(){
        clientCombobox.setModel(clientComboBoxModel);
        clientCombobox.setRenderer(new ClientCellRenderer());
        bookCombobox.setModel(bookComboBoxModel);
        bookCombobox.setRenderer(new BookCellRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        clientCombobox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        bookCombobox = new javax.swing.JComboBox();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Новая аренда");
        setMaximumSize(new java.awt.Dimension(300, 150));
        setMinimumSize(new java.awt.Dimension(300, 150));
        setPreferredSize(new java.awt.Dimension(300, 150));
        setResizable(false);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Арендатор:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        clientCombobox.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanel1.add(clientCombobox, gridBagConstraints);

        jLabel2.setText("Книга:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        bookCombobox.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanel1.add(bookCombobox, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        saveButton.setText("Сохранить");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(saveButton);

        cancelButton.setText("Отмена");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        RentEntity rent = RequestService.addRent(bookComboBoxModel.getSelectedItem().getId(),
                clientComboBoxModel.getSelectedItem().getId());
        rentPanel.addActiveRent(rent);
        bookPanel.minusBook(rent.getBook().getId());
        dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bookCombobox;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox clientCombobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

    private static class ClientCellRenderer extends DefaultListCellRenderer {
        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            JLabel component = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            ClientEntity client = (ClientEntity) value;
            component.setText(client.getFirstName() + " " + client.getLastName());
            return component;
        }
    }

    private static class BookCellRenderer extends DefaultListCellRenderer {
        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            JLabel component = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            BookEntity book = (BookEntity) value;
            component.setText(book.getName());
            return component;
        }
    }
}
